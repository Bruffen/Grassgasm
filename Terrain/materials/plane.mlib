<?xml version="1.0" ?>
<materialLib name="Plane">
	<shaders>
		<shader name="planeHeight" 		vs = "../shaders/planeVert.vert" 
										ps = "../shaders/planeFrag.frag" 
										tc = "../shaders/planeTess.tesc"
										te = "../shaders/planeTess.tese"
										/>
	</shaders>
	
	<materials>
		<material name="planeHeight">
			<shader name="planeHeight">
				<values>
					<valueof uniform="m_pvm" block="Matrices"
							 type="RENDERER" context="CURRENT" 
							 component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="m_vm" 
							 type="RENDERER" context="CURRENT" 
							 component="VIEW_MODEL" />
					<valueof uniform="m_pv" 
							 type="RENDERER" context="CURRENT" 
							 component="PROJECTION_VIEW" />
					<valueof uniform="m_normal" block="Matrices" 
							 type="RENDERER" context="CURRENT" 
							 component="NORMAL" />
							 
					<valueof uniform="m_view" block="Matrices" 
							 type="RENDERER" context="CURRENT" 
							 component="VIEW" />
					<valueof uniform="m_model" 
							 type="RENDERER" context="CURRENT" 
							 component="MODEL" />
					<valueof uniform="diffuse" block="Material" 
							 type="COLOR" context="CURRENT" 
							 component="DIFFUSE" />
							 
					<valueof uniform="l_dir" block="Light"
							 type="LIGHT" context="Sun"
							 component="DIRECTION" />

					<valueof uniform="camposition" 
							 type="CAMERA" context="CURRENT"
							 component="POSITION" />
					<valueof uniform="projViewModelMatrix"  type="RENDERER" context="CURRENT" 
											component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="tess_maxDistance" type="RENDERER" context="CURRENT" component="tess_maxDistance" />
					<valueof uniform="tess_maxOLevel" type="RENDERER" context="CURRENT" component="tess_maxOLevel" />
					<valueof uniform="tess_maxILevel" type="RENDERER" context="CURRENT" component="tess_maxILevel" />
					<valueof uniform="tess_outOfScreen" type="RENDERER" context="CURRENT" component="tess_outOfScreen" />
					<valueof uniform="detail" type="RENDERER" context="CURRENT" component="detail" />
							
				</values>
			</shader>
		</material>
	</materials>
</materialLib>